(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{509:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"介绍一下标准的-css-的盒子模型-低版本-ie-的盒子模型有什么不同的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下标准的-css-的盒子模型-低版本-ie-的盒子模型有什么不同的"}},[t._v("#")]),t._v(" 介绍一下标准的 CSS 的盒子模型？低版本 IE 的盒子模型有什么不同的?")]),t._v(" "),s("ul",[s("li",[t._v("有两种盒子模型：IE盒模型（border-box）、W3C标准盒模型（content-box）")]),t._v(" "),s("li",[t._v("盒模型：分为内容（content）、填充（padding）、边界（margin）、边框（border）四个部分")])]),t._v(" "),s("p",[t._v("IE盒模型和W3C标准盒模型的区别：")]),t._v(" "),s("ul",[s("li",[t._v("W3C标准盒模型：属性width，height只包含内容content，不包含border和padding")]),t._v(" "),s("li",[t._v("IE盒模型：属性width，height包含content、border和padding，指的是content+padding+border。")])]),t._v(" "),s("p",[t._v("在ie8+浏览器中使用哪个盒模型可以由box-sizing（CSS新增的属性）控制，默认值为content-box，即标准盒模型；\n如果将box-sizing设为border-box则用的是IE盒模型。如果在ie6，7，8中DOCTYPE缺失会将盒子模型解释为IE\n盒子模型。若在页面中声明了DOCTYPE类型，所有的浏览器都会把盒模型解释为W3C盒模型。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("盒模型都是由四个部分组成的，分别是margin、border、padding和content。\n\n标准盒模型和IE盒模型的区别在于设置width和height时，所对应的范围不同。标准盒模型的width和\nheight属性的范围只包含了content，而IE盒模型的width和height属性的范围包含了border、pad-\nding和content。\n\n一般来说，我们可以通过修改元素的box-sizing属性来改变元素的盒模型。\n")])])]),s("div",{staticClass:"custom-block right"},[s("p",[t._v("参考：《CSS 盒模型详解》")])])]),s("h3",{attrs:{id:"css-选择符有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-选择符有哪些"}},[t._v("#")]),t._v(" CSS 选择符有哪些？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('* id选择器（#myid）\n* 类选择器（.myclassname）\n* 标签选择器（div,h1,p）\n* 后代选择器（h1 p）\n* 相邻后代选择器（子）选择器（ul>li）\n* 兄弟选择器（li~a）\n* 相邻兄弟选择器（li+a）\n* 属性选择器（a[rel="external"]）\n* 伪类选择器（a:hover,li:nth-child）\n* 伪元素选择器（::before、::after）\n* 通配符选择器（*）\n')])])]),s("h3",{attrs:{id:"before-和-after-中双冒号和单冒号有什么区别-解释一下这-2-个伪元素的作用。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#before-和-after-中双冒号和单冒号有什么区别-解释一下这-2-个伪元素的作用。"}},[t._v("#")]),t._v(" ::before 和:after 中双冒号和单冒号有什么区别？解释一下这 2 个伪元素的作用。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("相关知识点")]),s("p",[t._v("单冒号（:）用于CSS3伪类，双冒号（::）用于CSS3伪元素。（伪元素由双冒号和伪元素名称组成）\n双冒号是在当前规范中引入的，用于区分伪类和伪元素。不过浏览器需要同时支持旧的已经存在的伪元素写法，\n比如:first-line、:first-letter、:before、:after等，\n而新的在CSS3中引入的伪元素则不允许再支持旧的单冒号的写法。")]),t._v(" "),s("p",[t._v("单冒号（:）用于CSS3伪类，双冒号（::）用于CSS3伪元素。（伪元素由双冒号和伪元素名称组成）\n双冒号是在当前规范中引入的，用于区分伪类和伪元素。不过浏览器需要同时支持旧的已经存在的伪元素写法，\n比如:first-line、:first-letter、:before、:after等，\n而新的在CSS3中引入的伪元素则不允许再支持旧的单冒号的写法。")])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("在css3中使用单冒号来表示伪类，用双冒号来表示伪元素。但是为了兼容已有的伪元素的写法，在一些浏\n览器中也可以使用单冒号来表示伪元素。\n\n伪类一般匹配的是元素的一些特殊状态，如hover、link等，而伪元素一般匹配的特殊的位置，比如after、\nbefore等。\n")])])]),s("h3",{attrs:{id:"css-中哪些属性可以继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-中哪些属性可以继承"}},[t._v("#")]),t._v(" CSS 中哪些属性可以继承？")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("相关知识点")]),s("p",[t._v("每个CSS属性定义的概述都指出了这个属性是默认继承的，还是默认不继承的。这决定了当你没有为元素的属性指定值时该如何计算值。")]),t._v(" "),s("p",[t._v("当元素的一个继承属性没有指定值时，则取父元素的同属性的计算值。只有文档根元素取该属性的概述中给定的初始值（这里的意思应该是在该属性本身的定义中的默认值）。")]),t._v(" "),s("p",[t._v("当元素的一个非继承属性（在Mozilla code里有时称之为reset property）没有指定值时，则取属性的初始值initial value（该值在该属性的概述里被指定）。")])]),s("p",[t._v("有继承的属性")]),t._v(" "),s("ul",[s("li",[t._v("字体系列属性:font、font-family、font-weight、font-size、font-style、font-variant、font-stretch、font-size-adjust")]),t._v(" "),s("li",[t._v("文本系列属性:text-indent、text-align、text-shadow、line-height、word-spacing、letter-spacing、text-transform、direction、color")]),t._v(" "),s("li",[t._v("表格布局属性:caption-side border-collapse empty-cells")]),t._v(" "),s("li",[t._v("列表属性:list-style-type、list-style-image、list-style-position、list-style")]),t._v(" "),s("li",[t._v("光标属性:cursor")]),t._v(" "),s("li",[t._v("元素可见性:visibility")]),t._v(" "),s("li",[t._v("还有一些不常用的；speak，page，设置嵌套引用的引号类型quotes等属性")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"title"}),s("p",[t._v("注意：当一个属性不是继承属性时，可以使用inherit关键字指定一个属性应从父元素继承它的值，inherit关键字用于显式地\n指定继承性，可用于任何继承性/非继承性属性。")])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("每一个属性在定义中都给出了这个属性是否具有继承性，一个具有继承性的属性会在没有指定值的时候，\n会使用父元素的同属性的值\n来作为自己的值。\n\n一般具有继承性的属性有，字体相关的属性，font-size和font-weight等。文本相关的属性，color和\ntext-align等。\n表格的一些布局属性、列表属性如list-style等。还有光标属性cursor、元素可见性visibility。\n\n当一个属性不是继承属性的时候，我们也可以通过将它的值设置为inherit来使它从父元素那获取同名的\n属性值来继承。\n")])])]),s("h3",{attrs:{id:"css-优先级算法如何计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-优先级算法如何计算"}},[t._v("#")]),t._v(" CSS 优先级算法如何计算？")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("相关知识点")]),s("p",[t._v("CSS的优先级是根据样式声明的特殊性值来判断的。")]),t._v(" "),s("p",[t._v("选择器的特殊性值分为四个等级，如下：")]),t._v(" "),s("p",[t._v("（1）标签内选择符x,0,0,0\n（2）ID选择符0,x,0,0\n（3）class选择符/属性选择符/伪类选择符 0,0,x,0\n（4）元素和伪元素选择符0,0,0,x")]),t._v(" "),s("p",[t._v("计算方法：")]),t._v(" "),s("p",[t._v("（1）每个等级的初始值为0")]),t._v(" "),s("p",[t._v("（2）每个等级的叠加为选择器出现的次数相加")]),t._v(" "),s("p",[t._v("（3）不可进位，比如0,99,99,99")]),t._v(" "),s("p",[t._v("（4）依次表示为：0,0,0,0")]),t._v(" "),s("p",[t._v("（5）每个等级计数之间没关联")]),t._v(" "),s("p",[t._v("（6）等级判断从左向右，如果某一位数值相同，则判断下一位数值")]),t._v(" "),s("p",[t._v("（7）如果两个优先级相同，则最后出现的优先级高，!important也适用")]),t._v(" "),s("p",[t._v("（8）通配符选择器的特殊性值为：0,0,0,0")]),t._v(" "),s("p",[t._v("（9）继承样式优先级最低，通配符样式优先级高于继承样式")]),t._v(" "),s("p",[t._v("（10）!important（权重），它没有特殊性值，但它的优先级是最高的，为了方便记忆，可以认为它的特殊性值为1,0,0,0,0。")]),t._v(" "),s("p",[t._v("计算实例：")]),t._v(" "),s("p",[t._v("（1）#demo a{color: orange;}/"),s("em",[t._v("特殊性值：0,1,0,1")]),t._v("/\n（2）div#demo a{color: red;}/"),s("em",[t._v("特殊性值：0,1,0,2")]),t._v("/")])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("判断优先级时，首先我们会判断一条属性声明是否有权重，也就是是否在声明后面加上了!important。\n一条声明如果加上了权重，那么它的优先级就是最高的，前提是它之后不再出现相同权重的声明。如果\n权重相同，我们则需要去比较匹配规则的特殊性。\n\n一条匹配规则一般由多个选择器组成，一条规则的特殊性由组成它的选择器的特殊性累加而成。选择器\n的特殊性可以分为四个等级，第一个等级是行内样式，为1000，第二个等级是id选择器，为0100，第三\n个等级是类选择器、伪类选择器和属性选择器，为0010，第四个等级是元素选择器和伪元素选择器，为\n0001。规则中每出现一个选择器，就将它的特殊性进行叠加，这个叠加只限于对应的等级的叠加，不会产\n生进位。选择器特殊性值的比较是从左向右排序的，也就是说以1开头的特殊性值比所有以0开头的特殊性\n值要大。\n\n比如说特殊性值为1000的的规则优先级就要比特殊性值为0999的规则高。如果两个规则的特殊性值相等的\n时候，那么就会根据它们引入的顺序，后出现的规则的优先级最高。\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"title"},[t._v("注意")]),s("p",[t._v("（1）样式应用时，css会先查看规则的权重（!important），加了权重的优先级最高，当权重相同的时候，会比较规则的特殊性。")]),t._v(" "),s("p",[t._v("（2）特殊性值越大的声明优先级越高。")]),t._v(" "),s("p",[t._v("（3）相同特殊性值的声明，根据样式引入的顺序，后声明的规则优先级高（距离元素出现最近的）")]),t._v(" "),s("p",[t._v("(4) 部分浏览器由于字节溢出问题出现的进位表现不做考虑")])]),s("h3",{attrs:{id:"关于伪类-lvha-的解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于伪类-lvha-的解释"}},[t._v("#")]),t._v(" 关于伪类 LVHA 的解释?")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("a标签有四种状态：链接访问前、链接访问后、鼠标滑过、激活，分别对应四种伪类:link、:visited、\n:hover、:active；\n\n当链接未访问过时：\n\n（1）当鼠标滑过a链接时，满足:link和:hover两种状态，要改变a标签的颜色，就必须将:hover伪类在\n:link伪类后面声明；\n（2）当鼠标点击激活a链接时，同时满足:link、:hover、:active三种状态，要显示a标签激活时的样式\n（:active），必须将:active声明放到:link和:hover之后。因此得出LVHA这个顺序。\n\n当链接访问过时，情况基本同上，只不过需要将:link换成:visited。\n\n这个顺序能不能变？可以，但也只有:link和:visited可以交换位置，因为一个链接要么访问过要么没访问\n过，不可能同时满足，也就不存在覆盖的问题。\n")])])]),s("h3",{attrs:{id:"css3-新增伪类有那些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css3-新增伪类有那些"}},[t._v("#")]),t._v(" CSS3 新增伪类有那些？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("（1）elem:nth-child(n)选中父元素下的第n个子元素，并且这个子元素的标签名为elem，n可以接受具体\n的数值，也可以接受函数。\n\n（2）elem:nth-last-child(n)作用同上，不过是从后开始查找。\n\n（3）elem:last-child选中最后一个子元素。\n\n（4）elem:only-child如果elem是父元素下唯一的子元素，则选中之。\n\n（5）elem:nth-of-type(n)选中父元素下第n个elem类型元素，n可以接受具体的数值，也可以接受函数。\n\n（6）elem:first-of-type选中父元素下第一个elem类型元素。\n\n（7）elem:last-of-type选中父元素下最后一个elem类型元素。\n\n（8）elem:only-of-type如果父元素下的子元素只有一个elem类型元素，则选中该元素。\n\n（9）elem:empty选中不包含子元素和内容的elem类型元素。\n\n（10）elem:target选择当前活动的elem元素。\n\n（11）:not(elem)选择非elem元素的每个元素。\n\n（12）:enabled 控制表单控件的禁用状态。\n\n（13）:disabled 控制表单控件的禁用状态。\n\n(14):checked单选框或复选框被选中。\n")])])]),s("h3",{attrs:{id:"如何居中-div"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何居中-div"}},[t._v("#")]),t._v(" 如何居中 div？")]),t._v(" "),s("p",[t._v("-水平居中：给 div 设置一个宽度，然后添加 margin:0 auto 属性")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("-水平居中，利用 text-align:center 实现")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rgba")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0.5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 500px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 400px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("-让绝对定位的 div 居中")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("bottom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*方便看效果*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("-水平垂直居中")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 1 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*确定容器的宽高宽500高300的层设置层的外边距div{*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*绝对定位*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 500px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -150px00-250px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*外边距为自身宽高的一半*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*方便看效果*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 2 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*未知容器的宽高，利用`transform`属性*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*相对定位或绝对定位均可*/")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 500px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" -50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*方便看效果*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 3 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*利用flex布局实际使用时应考虑兼容性*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*垂直居中*/")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*水平居中*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".containerdiv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*方便看效果*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 4 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*利用text-align:center和vertical-align:middle属性*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("bottom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rgba")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0.5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container::after")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("vertical-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" middle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 500px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 400px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" normal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("vertical-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" middle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("一般常见的几种居中的方法有：\n\n对于宽高固定的元素\n\n（1）我们可以利用margin:0 auto来实现元素的水平居中。\n\n（2）利用绝对定位，设置四个方向的值都为0，并将margin设置为auto，由于宽高固定，因此对应方向实现平分\n，可以实现水平和垂直方向上的居中。\n\n（3）利用绝对定位，先将元素的左上角通过top:50%和left:50%定位到页面的中心，然后再通过margin负值来调\n整元素的中心点到页面的中心。\n\n（4）利用绝对定位，先将元素的左上角通过top:50%和left:50%定位到页面的中心，然后再通过translate来调\n整元素的中心点到页面的中心。\n\n（5）使用flex布局，通过align-items:center和justify-content:center设置容器的垂直和水平方向上为居\n中对齐，然后它的子元素也可以实现垂直和水平的居中。\n\n对于宽高不定的元素，上面的后面两种方法，可以实现元素的垂直和水平的居中。\n")])])]),s("h3",{attrs:{id:"display-有哪些值-说明他们的作用。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display-有哪些值-说明他们的作用。"}},[t._v("#")]),t._v(" display 有哪些值？说明他们的作用。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("block 块类型。默认宽度为父元素宽度，可设置宽高，换行显示。\nnone 元素不显示，并从文档流中移除。\ninline 行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。\ninline-block 默认宽度为内容宽度，可以设置宽高，同行显示。\nlist-item 像块类型元素一样显示，并添加样式列表标记。\ntable 此元素会作为块级表格来显示。\ninherit 规定应该从父元素继承display属性的值。\n")])])]),s("h3",{attrs:{id:"position-的值-relative-和-absolute-定位原点是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#position-的值-relative-和-absolute-定位原点是"}},[t._v("#")]),t._v(" position 的值 relative 和 absolute 定位原点是？")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("相关知识点")]),s("p",[t._v("absolute\n生成绝对定位的元素，相对于值不为static的第一个父元素的padding box进行定位，也可以理解为离自己这一级元素最近的\n一级position设置为absolute或者relative的父元素的padding box的左上角为原点的。")]),t._v(" "),s("p",[t._v("fixed（老IE不支持）\n生成绝对定位的元素，相对于浏览器窗口进行定位。")]),t._v(" "),s("p",[t._v("relative\n生成相对定位的元素，相对于其元素本身所在正常位置进行定位。")]),t._v(" "),s("p",[t._v("static\n默认值。没有定位，元素出现在正常的流中（忽略top,bottom,left,right,z-index声明）。")]),t._v(" "),s("p",[t._v("inherit\n规定从父元素继承position属性的值。")])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("relative定位的元素，是相对于元素本身的正常位置来进行定位的。\n\nabsolute定位的元素，是相对于它的第一个position值不为static的祖先元素的padding box来进行定位的。\n这句话我们可以这样来理解，我们首先需要找到绝对定位元素的一个position的值不为static的祖先元素，然\n后相对于这个祖先元素的padding box来定位，也就是说在计算定位距离的时候，padding的值也要算进去。\n")])])]),s("h3",{attrs:{id:"css3-有哪些新特性-根据项目回答"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css3-有哪些新特性-根据项目回答"}},[t._v("#")]),t._v(" CSS3 有哪些新特性？（根据项目回答）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("新增各种CSS选择器 （:not(.input)：所有class不是“input”的节点）\n圆角  （border-radius:8px）\n多列布局 （multi-column layout）\n阴影和反射 （Shadow\\Reflect）\n文字特效  （text-shadow）\n文字渲染  （Text-decoration）\n线性渐变  （gradient）\n旋转   （transform）\n缩放，定位，倾斜，动画，多背景\n例如：transform:\\scale(0.85,0.90)\\translate(0px,-30px)\\skew(-9deg,0deg)\\Animation:\n")])])]),s("h3",{attrs:{id:"请解释一下-css3-的-flex-box-弹性盒布局模型-以及适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请解释一下-css3-的-flex-box-弹性盒布局模型-以及适用场景"}},[t._v("#")]),t._v(" 请解释一下 CSS3 的 Flex box（弹性盒布局模型），以及适用场景？")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("相关知识点")]),s("p",[t._v('Flex是FlexibleBox的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。')]),t._v(" "),s("p",[t._v("任何一个容器都可以指定为Flex布局。行内元素也可以使用Flex布局。注意，设为Flex布局以后，子元素的float、cl\near和vertical-align属性将失效。")]),t._v(" "),s("p",[t._v('采用Flex布局的元素，称为Flex容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为Flex\n项目（flex item），简称"项目"。')]),t._v(" "),s("p",[t._v("容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis），项目默认沿主轴排列。")]),t._v(" "),s("p",[t._v("以下6个属性设置在容器上。")]),t._v(" "),s("p",[t._v("flex-direction属性决定主轴的方向（即项目的排列方向）。")]),t._v(" "),s("p",[t._v("flex-wrap属性定义，如果一条轴线排不下，如何换行。")]),t._v(" "),s("p",[t._v("flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。")]),t._v(" "),s("p",[t._v("justify-content属性定义了项目在主轴上的对齐方式。")]),t._v(" "),s("p",[t._v("align-items属性定义项目在交叉轴上如何对齐。")]),t._v(" "),s("p",[t._v("align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")]),t._v(" "),s("p",[t._v("以下6个属性设置在项目上。")]),t._v(" "),s("p",[t._v("order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),t._v(" "),s("p",[t._v("flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。")]),t._v(" "),s("p",[t._v("flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),t._v(" "),s("p",[t._v("flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间。浏览器根据这个属性，计算主轴是否有多余空间。它的默认\n值为auto，即项目的本来大小。")]),t._v(" "),s("p",[t._v("flex属性是flex-grow，flex-shrink和flex-basis的简写，默认值为0 1 auto。")]),t._v(" "),s("p",[t._v("align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父\n元素的align-items属性，如果没有父元素，则等同于stretch。")])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("flex布局是CSS3新增的一种布局方式，我们可以通过将一个元素的display属性值设置为flex从而使它成为一个\nflex容器，它的所有子元素都会成为它的项目。\n\n一个容器默认有两条轴，一个是水平的主轴，一个是与主轴垂直的交叉轴。我们可以使用flex-direction来指定\n主轴的方向。我们可以使用justify-content来指定元素在主轴上的排列方式，使用align-items来指定元素在\n交叉轴上的排列方式。还可以使用flex-wrap来规定当一行排列不下时的换行方式。\n\n对于容器中的项目，我们可以使用order属性来指定项目的排列顺序，还可以使用flex-grow来指定当排列空间有\n剩余的时候，项目的放大比例。还可以使用flex-shrink来指定当排列空间不足时，项目的缩小比例。\n")])])]),s("h3",{attrs:{id:"用纯-css-创建一个三角形的原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用纯-css-创建一个三角形的原理是什么"}},[t._v("#")]),t._v(" 用纯 CSS 创建一个三角形的原理是什么？")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("采用的是相邻边框连接处的均分原理。\n将元素的宽高设为0，只设置border，把任意三条边隐藏掉（颜色设为transparent），剩下的就是一个三角形。\n  \n  #demo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transparent transparent red transparent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"一个满屏品字布局如何设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个满屏品字布局如何设计"}},[t._v("#")]),t._v(" 一个满屏品字布局如何设计?")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("简单的方式：\n 上面的div宽100%，\n 下面的两个div分别宽50%，\n 然后用float或者inline使其不换行即可\n")])])]),s("h3",{attrs:{id:"css-多列等高如何实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-多列等高如何实现"}},[t._v("#")]),t._v(" CSS 多列等高如何实现？")]),t._v(" "),s("div",{staticClass:"language-（1）利用padding-bottom|margin-bottom正负值相抵，不会影响页面布局的特点。设置父容器设置超出隐藏（overflow: extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("hidden），这样父容器的高度就还是它里面的列没有设定padding-bottom时的高度，当它里面的任一列高度增加\n了，则父容器的高度被撑到里面最高那列的高度，其他比这列矮的列会用它们的padding-bottom补偿这部分高度\n差。\n\n（2）利用table-cell所有单元格高度都相等的特性，来实现多列等高。\n\n（3）利用flex布局中项目align-items属性默认为stretch，如果项目未设置高度或设为auto，将占满整个容器\n的高度的特性，来实现多列等高。\n")])])]),s("h3",{attrs:{id:"经常遇到的浏览器的兼容性有哪些-原因-解决方法是什么-常用-hack-的技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#经常遇到的浏览器的兼容性有哪些-原因-解决方法是什么-常用-hack-的技巧"}},[t._v("#")]),t._v(" 经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用 hack 的技巧？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('（1）png24位的图片在iE6浏览器上出现背景\n解决方案：做成PNG8，也可以引用一段脚本处理。\n\n（2）浏览器默认的margin和padding不同\n解决方案：加一个全局的*{margin:0;padding:0;}来统一。\n\n（3）IE6双边距bug：在IE6下，如果对元素设置了浮动，同时又设置了margin-left或\nmargin-right，margin值会加倍。\n\n#box{float:left;width:10px;margin:0 0 0 10px;}\n\n这种情况之下IE会产生20px的距离\n解决方案：在float的标签样式控制中加入_display:inline;将其转化为行内属性。(_这个符号只有ie6会识别)\n\n（4）渐进识别的方式，从总体中逐渐排除局部。\n首先，巧妙的使用"\\9"这一标记，将IE游览器从所有情况中分离出来。\n接着，再次使用"+"将IE8和IE7、IE6分离开来，这样IE8已经独立识别。\n.bb{\nbackground-color:#f1ee18;/*所有识别*/\n.background-color:#00deff\\9;/*IE6、7、8识别*/\n+background-color:#a200ff;/*IE6、7识别*/\n_background-color:#1e0bd1;/*IE6识别*/\n}\n\n（5）IE下，可以使用获取常规属性的方法来获取自定义属性，也可以使用getAttribute()获取自定义\n属性；Firefox下，只能使用getAttribute()获取自定义属性\n解决方法：统一通过getAttribute()获取自定义属性。\n\n（6）IE下，event对象有x、y属性，但是没有pageX、pageY属性;Firefox下，event对象有\npageX、pageY属性，但是没有x、y属性。\n解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。\n\n（7）Chrome中文界面下默认会将小于12px的文本强制按照12px显示\n解决方法：\n\n1.可通过加入CSS属性-webkit-text-size-adjust:none;解决。但是，在chrome\n更新到27版本之后就不可以用了。\n\n2.还可以使用-webkit-transform:scale(0.5);注意-webkit-transform:scale(0.75);\n收缩的是整个span的大小，这时候，必须要将span转换成块元素，可以使用display：block/inline-block/\n\n（8）超链接访问过后hover样式就不出现了，被点击访问过的超链接样式不再具有hover和active了\n解决方法：改变CSS属性的排列顺序L-V-H-A\n\n（9）怪异模式问题：漏写DTD声明，Firefox仍然会按照标准模式来解析网页，但在IE中会触发怪异模\n式。为避免怪异模式给我们带来不必要的麻烦，最好养成书写DTD声明的好习惯。\n')])])]),s("h3",{attrs:{id:"li-与-li-之间有看不见的空白间隔是什么原因引起的-有什么解决办法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#li-与-li-之间有看不见的空白间隔是什么原因引起的-有什么解决办法"}},[t._v("#")]),t._v(" li 与 li 之间有看不见的空白间隔是什么原因引起的？有什么解决办法？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("浏览器会把inline元素间的空白字符（空格、换行、Tab等）渲染成一个空格。而为了美观。我们通常是一个\n<li>放在一行，这导致<li>换行后产生换行字符，它变成一个空格，占用了一个字符的宽度。\n\n解决办法：\n\n（1）为<li>设置float:left。不足：有些容器是不能设置浮动，如左右切换的焦点图等。\n\n（2）将所有<li>写在同一行。不足：代码不美观。\n\n（3）将<ul>内的字符尺寸直接设为0，即font-size:0。不足：<ul>中的其他字符尺寸也被设为0，需要额外重\n新设定其他字符尺寸，且在Safari浏览器依然会出现空白间隔。\n\n（4）消除<ul>的字符间隔letter-spacing:-8px，不足：这也设置了<li>内的字符间隔，因此需要将<li>内的\n字符间隔设为默认letter-spacing:normal。\n")])])]),s("h3",{attrs:{id:"为什么要初始化-css-样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要初始化-css-样式"}},[t._v("#")]),t._v(" 为什么要初始化 CSS 样式？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之\n间的页面显示差异。\n\n-当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。\n\n最简单的初始化方法：*{padding:0;margin:0;}（强烈不建议）\n\n淘宝的样式初始化代码：\nbody,h1,h2,h3,h4,h5,h6,hr,p,blockquote,dl,dt,dd,ul,ol,li,pre,form,fieldset,legend\n,button,input,textarea,th,td{margin:0;padding:0;}\nbody,button,input,select,textarea{font:12px/1.5tahoma,arial,\\5b8b\\4f53;}\nh1,h2,h3,h4,h5,h6{font-size:100%;}\naddress,cite,dfn,em,var{font-style:normal;}\ncode,kbd,pre,samp{font-family:couriernew,courier,monospace;}\nsmall{font-size:12px;}\nul,ol{list-style:none;}\na{text-decoration:none;}\na:hover{text-decoration:underline;}\nsup{vertical-align:text-top;}\nsub{vertical-align:text-bottom;}\nlegend{color:#000;}\nfieldset,img{border:0;}\nbutton,input,select,textarea{font-size:100%;}\ntable{border-collapse:collapse;border-spacing:0;}\n")])])]),s("h3",{attrs:{id:"什么是包含块-对于包含块的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是包含块-对于包含块的理解"}},[t._v("#")]),t._v(" 什么是包含块，对于包含块的理解?")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("包含块（containing block）就是元素用来计算和定位的一个框。\n\n（1）根元素（很多场景下可以看成是<html>）被称为“初始包含块”，其尺寸等同于浏览器可视窗口的大小。\n\n（2）对于其他元素，如果该元素的position是relative或者static，则“包含块”由其最近的块容器祖先\n盒的content box边界形成。\n\n（3）如果元素position:fixed，则“包含块”是“初始包含块”。\n\n（4）如果元素position:absolute，则“包含块”由最近的position不为static的祖先元素建立，具体方式如\n下\n\n如果该祖先元素是纯inline元素，则规则略复杂：\n•假设给内联元素的前后各生成一个宽度为0的内联盒子（inline box），则这两个内联盒子的padding box外\n面的包围盒就是内联元素的“包含块”；\n•如果该内联元素被跨行分割了，那么“包含块”是未定义的，也就是CSS2.1规范并没有明确定义，浏览器自行发\n挥否则，“包含块”由该祖先的padding box边界形成。\n\n如果没有符合条件的祖先元素，则“包含块”是“初始包含块”。\n")])])]),s("h3",{attrs:{id:"css-里的-visibility-属性有个-collapse-属性值是干嘛用的-在不同浏览器下以后什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-里的-visibility-属性有个-collapse-属性值是干嘛用的-在不同浏览器下以后什么区别"}},[t._v("#")]),t._v(" CSS 里的 visibility 属性有个 collapse 属性值是干嘛用的？在不同浏览器下以后什么区别？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("（1）对于一般的元素，它的表现跟visibility：hidden;是一样的。元素是不可见的，但此时仍占用页面空间。\n\n（2）但例外的是，如果这个元素是table相关的元素，例如table行，table group，table列，table column \ngroup，它的表现却跟display:none一样，也就是说，它们占用的空间也会释放。\n\n在不同浏览器下的区别：\n\n在谷歌浏览器里，使用collapse值和使用hidden值没有什么区别。\n\n在火狐浏览器、Opera和IE11里，使用collapse值的效果就如它的字面意思：table的行会消失，它的下面一行会\n补充它的位置。\n")])])]),s("h3",{attrs:{id:"width-auto-和-width-100-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#width-auto-和-width-100-的区别"}},[t._v("#")]),t._v(" width:auto 和 width:100%的区别?")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("一般而言\n\nwidth:100%会使元素box的宽度等于父元素的content box的宽度。\n\nwidth:auto会使元素撑满整个父元素，margin、border、padding、content区域会自动分配水平空间。\n")])])]),s("h3",{attrs:{id:"绝对定位元素与非绝对定位元素的百分比计算的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绝对定位元素与非绝对定位元素的百分比计算的区别"}},[t._v("#")]),t._v(" 绝对定位元素与非绝对定位元素的百分比计算的区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("绝对定位元素的宽高百分比是相对于临近的position不为static的祖先元素的padding box来计算的。\n\n非绝对定位元素的宽高百分比则是相对于父元素的content box来计算的。\n")])])]),s("h3",{attrs:{id:"简单介绍使用图片-base64-编码的优点和缺点。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单介绍使用图片-base64-编码的优点和缺点。"}},[t._v("#")]),t._v(" 简单介绍使用图片 base64 编码的优点和缺点。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("base64编码是一种图片处理格式，通过特定的算法将图片编码成一长串字符串，在页面上显示的时候，可以用该字符串来代替\n图片的url属性。\n\n使用base64的优点是：\n\n（1）减少一个图片的HTTP请求\n\n使用base64的缺点是：\n\n（1）根据base64的编码原理，编码后的大小会比原文件大小大1/3，如果把大图片编码到html/css中，不仅会造成文件体\n积的增加，影响文件的加载速度，还会增加浏览器对html或css文件解析渲染的时间。\n\n（2）使用base64无法直接缓存，要缓存只能缓存包含base64的文件，比如HTML或者CSS，这相比域直接缓存图片的效果要\n差很多。\n\n（3）兼容性的问题，ie8以前的浏览器不支持。\n\n一般一些网站的小图标可以使用base64图片来引入。\n")])])]),s("h3",{attrs:{id:"display-、-position-和-float-的相互关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display-、-position-和-float-的相互关系"}},[t._v("#")]),t._v(" 'display'、'position'和'float'的相互关系？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("（1）首先我们判断display属性是否为none，如果为none，则position和float属性的值不影响元素最后的表现。\n\n（2）然后判断position的值是否为absolute或者fixed，如果是，则float属性失效，并且display的值应该被\n设置为table或者block，具体转换需要看初始转换值。\n\n（3）如果position的值不为absolute或者fixed，则判断float属性的值是否为none，如果不是，则display\n的值则按上面的规则转换。注意，如果position的值为relative并且float属性的值存在，则relative相对\n于浮动后的最终位置定位。\n\n（4）如果float的值为none，则判断元素是否为根元素，如果是根元素则display属性按照上面的规则转换，如果不是，\n则保持指定的display属性值不变。\n\n总的来说，可以把它看作是一个类似优先级的机制，\"position:absolute\"和\"position:fixed\"优先级最高，有它存在\n的时候，浮动不起作用，'display'的值也需要调整；其次，元素的'float'特性的值不是\"none\"的时候或者它是根元素\n的时候，调整'display'的值；最后，非根元素，并且非浮动元素，并且非绝对定位的元素，'display'特性值同设置值。\n")])])]),s("h3",{attrs:{id:"margin-重叠问题的理解。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin-重叠问题的理解。"}},[t._v("#")]),t._v(" margin 重叠问题的理解。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("相关知识点")]),s("p",[t._v("块级元素的上外边距（margin-top）与下外边距（margin-bottom）有时会合并为单个外边距，这样的现象称为“margin合\n并”。")]),t._v(" "),s("p",[t._v("产生折叠的必备条件：margin必须是邻接的!")]),t._v(" "),s("p",[t._v("而根据w3c规范，两个margin是邻接的必须满足以下条件：")]),t._v(" "),s("ul",[s("li",[t._v("必须是处于常规文档流（非float和绝对定位）的块级盒子，并且处于同一个BFC当中。")]),t._v(" "),s("li",[t._v("没有线盒，没有空隙，没有padding和border将他们分隔开")]),t._v(" "),s("li",[t._v("都属于垂直方向上相邻的外边距，可以是下面任意一种情况")]),t._v(" "),s("li",[t._v("元素的margin-top与其第一个常规文档流的子元素的margin-top")]),t._v(" "),s("li",[t._v("元素的margin-bottom与其下一个常规文档流的兄弟元素的margin-top")]),t._v(" "),s("li",[t._v("height为auto的元素的margin-bottom与其最后一个常规文档流的子元素的margin-bottom")]),t._v(" "),s("li",[t._v("高度为0并且最小高度也为0，不包含常规文档流的子元素，并且自身没有建立新的BFC的元素的margin-top和margin-bottom")])]),t._v(" "),s("p",[t._v("margin合并的3种场景：")]),t._v(" "),s("p",[t._v("（1）相邻兄弟元素margin合并。")]),t._v(" "),s("p",[t._v("解决办法：")]),t._v(" "),s("ul",[s("li",[t._v("设置块状格式化上下文元素（BFC）")])]),t._v(" "),s("p",[t._v("（2）父级和第一个/最后一个子元素的margin合并。")]),t._v(" "),s("p",[t._v("解决办法：")]),t._v(" "),s("p",[t._v("对于margin-top合并，可以进行如下操作（满足一个条件即可）：")]),t._v(" "),s("ul",[s("li",[t._v("父元素设置为块状格式化上下文元素；")]),t._v(" "),s("li",[t._v("父元素设置border-top值；")]),t._v(" "),s("li",[t._v("父元素设置padding-top值；")]),t._v(" "),s("li",[t._v("父元素和第一个子元素之间添加内联元素进行分隔。")])]),t._v(" "),s("p",[t._v("对于margin-bottom合并，可以进行如下操作（满足一个条件即可）：")]),t._v(" "),s("ul",[s("li",[t._v("父元素设置为块状格式化上下文元素；")]),t._v(" "),s("li",[t._v("父元素设置border-bottom值；")]),t._v(" "),s("li",[t._v("父元素设置padding-bottom值；")]),t._v(" "),s("li",[t._v("父元素和最后一个子元素之间添加内联元素进行分隔；")]),t._v(" "),s("li",[t._v("父元素设置height、min-height或max-height。")])]),t._v(" "),s("p",[t._v("（3）空块级元素的margin合并。")]),t._v(" "),s("p",[t._v("解决办法：")]),t._v(" "),s("ul",[s("li",[t._v("设置垂直方向的border；")]),t._v(" "),s("li",[t._v("设置垂直方向的padding；")]),t._v(" "),s("li",[t._v("里面添加内联元素（直接Space键空格是没用的）；")]),t._v(" "),s("li",[t._v("设置height或者min-height。")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("margin重叠指的是在垂直方向上，两个相邻元素的margin发生重叠的情况。\n\n一般来说可以分为四种情形：\n\n第一种是相邻兄弟元素的marin-bottom和margin-top的值发生重叠。这种情况下我们可以通过设置其中一个元素为BFC\n来解决。\n\n第二种是父元素的margin-top和子元素的margin-top发生重叠。它们发生重叠是因为它们是相邻的，所以我们可以通过这\n一点来解决这个问题。我们可以为父元素设置border-top、padding-top值来分隔它们，当然我们也可以将父元素设置为BFC\n来解决。\n\n第三种是高度为auto的父元素的margin-bottom和子元素的margin-bottom发生重叠。它们发生重叠一个是因为它们相\n邻，一个是因为父元素的高度不固定。因此我们可以为父元素设置border-bottom、padding-bottom来分隔它们，也可以为\n父元素设置一个高度，max-height和min-height也能解决这个问题。当然将父元素设置为BFC是最简单的方法。\n\n第四种情况，是没有内容的元素，自身的margin-top和margin-bottom发生的重叠。我们可以通过为其设置border、pa\ndding或者高度来解决这个问题。\n")])])]),s("h3",{attrs:{id:"对-bfc-规范-块级格式化上下文-block-formatting-context-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对-bfc-规范-块级格式化上下文-block-formatting-context-的理解"}},[t._v("#")]),t._v(" 对 BFC 规范（块级格式化上下文：block formatting context）的理解？")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("相关知识点")]),s("p",[t._v("块格式化上下文（Block Formatting Context，BFC）是Web页面的可视化CSS渲染的一部分，是布局过程中生成块级盒\n子的区域，也是浮动元素与其他元素的交互限定区域。")]),t._v(" "),s("p",[t._v("通俗来讲")]),t._v(" "),s("ul",[s("li",[t._v("BFC是一个独立的布局环境，可以理解为一个容器，在这个容器中按照一定规则进行物品摆放，并且不会影响其它环境中的物品。")]),t._v(" "),s("li",[t._v("如果一个元素符合触发BFC的条件，则BFC中的元素布局不受外部影响。")])]),t._v(" "),s("p",[t._v("创建BFC")]),t._v(" "),s("p",[t._v("（1）根元素或包含根元素的元素\n（2）浮动元素float＝left|right或inherit（≠none）\n（3）绝对定位元素position＝absolute或fixed\n（4）display＝inline-block|flex|inline-flex|table-cell或table-caption\n（5）overflow＝hidden|auto或scroll(≠visible)")])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("BFC指的是块级格式化上下文，一个元素形成了BFC之后，那么它内部元素产生的布局不会影响到外部元素，外部元素的布局也\n不会影响到BFC中的内部元素。一个BFC就像是一个隔离区域，和其他区域互不影响。\n\n一般来说根元素是一个BFC区域，浮动和绝对定位的元素也会形成BFC，display属性的值为inline-block、flex这些\n属性时也会创建BFC。还有就是元素的overflow的值不为visible时都会创建BFC。\n")])])]),s("h3",{attrs:{id:"ifc-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ifc-是什么"}},[t._v("#")]),t._v(" IFC 是什么？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("IFC指的是行级格式化上下文，它有这样的一些布局规则：\n\n（1）行级上下文内部的盒子会在水平方向，一个接一个地放置。\n（2）当一行不够的时候会自动切换到下一行。\n（3）行级上下文的高度由内部最高的内联盒子的高度决定。\n")])])]),s("h3",{attrs:{id:"请解释一下为什么需要清除浮动-清除浮动的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请解释一下为什么需要清除浮动-清除浮动的方式"}},[t._v("#")]),t._v(" 请解释一下为什么需要清除浮动？清除浮动的方式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("浮动元素可以左右移动，直到遇到另一个浮动元素或者遇到它外边缘的包含框。浮动框不属于文档流中的普通流，当元素浮动之后，\n不会影响块级元素的布局，只会影响内联元素布局。此时文档流中的普通流就会表现得该浮动框不存在一样的布局模式。当包含框\n的高度小于浮动框的时候，此时就会出现“高度塌陷”。\n\n清除浮动是为了清除使用浮动元素产生的影响。浮动的元素，高度会塌陷，而高度的塌陷使我们页面后面的布局不能正常显示。\n\n清除浮动的方式\n\n（1）使用clear属性清除浮动。参考28。\n\n（2）使用BFC块级格式化上下文来清除浮动。参考26。\n\n因为BFC元素不会影响外部元素的特点，所以BFC元素也可以用来清除浮动的影响，因为如果不清除，子元素浮动则父元\n素高度塌陷，必然会影响后面元素布局和定位，这显然有违BFC元素的子元素不会影响外部元素的设定。\n")])])]),s("h3",{attrs:{id:"使用-clear-属性清除浮动的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-clear-属性清除浮动的原理"}},[t._v("#")]),t._v(" 使用 clear 属性清除浮动的原理？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("使用clear属性清除浮动，其语法如下：\n\nclear:none|left|right|both\n\n如果单看字面意思，clear:left应该是“清除左浮动”，clear:right应该是“清除右浮动”的意思，实际上，这种解释是有问\n题的，因为浮动一直还在，并没有清除。\n\n官方对clear属性的解释是：“元素盒子的边不能和前面的浮动元素相邻。”，我们对元素设置clear属性是为了避免浮动元素\n对该元素的影响，而不是清除掉浮动。\n\n还需要注意的一点是clear属性指的是元素盒子的边不能和前面的浮动元素相邻，注意这里“前面的”3个字，也就是clear属\n性对“后面的”浮动元素是不闻不问的。考虑到float属性要么是left，要么是right，不可能同时存在，同时由于clear\n属性对“后面的”浮动元素不闻不问，因此，当clear:left有效的时候，clear:right必定无效，也就是此时clear:left\n等同于设置clear:both；同样地，clear:right如果有效也是等同于设置clear:both。由此可见，clear:left和cle\nar:right这两个声明就没有任何使用的价值，至少在CSS世界中是如此，直接使用clear:both吧。\n\n一般使用伪元素的方式清除浮动\n\n.clear::after{\ncontent:'';\ndisplay:table;//也可以是'block'，或者是'list-item'\nclear:both;\n}\n\nclear属性只有块级元素才有效的，而::after等伪元素默认都是内联水平，这就是借助伪元素清除浮动影响时需要设置disp\nlay属性值的原因。\n")])])]),s("h3",{attrs:{id:"zoom-1-的清除浮动原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zoom-1-的清除浮动原理"}},[t._v("#")]),t._v(" zoom:1 的清除浮动原理?")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("清除浮动，触发hasLayout；\nzoom属性是IE浏览器的专有属性，它可以设置或检索对象的缩放比例。解决ie下比较奇葩的bug。譬如外边距（margin）\n的重叠，浮动清除，触发ie的haslayout属性等。\n\n来龙去脉大概如下：\n当设置了zoom的值之后，所设置的元素就会就会扩大或者缩小，高度宽度就会重新计算了，这里一旦改变zoom值时其实也会发\n生重新渲染，运用这个原理，也就解决了ie下子元素浮动时候父元素不随着自动扩大的问题。\n\nzoom属性是IE浏览器的专有属性，火狐和老版本的webkit核心的浏览器都不支持这个属性。然而，zoom现在已经被逐步标\n准化，出现在CSS3.0规范草案中。\n\n目前非ie由于不支持这个属性，它们又是通过什么属性来实现元素的缩放呢？可以通过css3里面的动画属性scale进行缩放。\n")])])]),s("h3",{attrs:{id:"移动端的布局用过媒体查询吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动端的布局用过媒体查询吗"}},[t._v("#")]),t._v(" 移动端的布局用过媒体查询吗？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("假设你现在正用一台显示设备来阅读这篇文章，同时你也想把它投影到屏幕上，或者打印出来，而显示设备、屏幕投影和打印等这些\n媒介都有自己的特点，CSS就是为文档提供在不同媒介上展示的适配方法\n\n当媒体查询为真时，相关的样式表或样式规则会按照正常的级联规被应用。当媒体查询返回假，标签上带有媒体查询的样式表仍将被\n下载（只不过不会被应用）。\n\n包含了一个媒体类型和至少一个使用宽度、高度和颜色等媒体属性来限制样式表范围的表达式。CSS3加入的媒体查询使得无需修改\n内容便可以使样式应用于某些特定的设备范围。\n")])])]),s("h3",{attrs:{id:"使用-css-预处理器吗-喜欢哪个"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-css-预处理器吗-喜欢哪个"}},[t._v("#")]),t._v(" 使用 CSS 预处理器吗？喜欢哪个？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SASS（SASS、LESS没有本质区别，只因为团队前端都是用的SASS）\n")])])]),s("h3",{attrs:{id:"css-优化、提高性能的方法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-优化、提高性能的方法有哪些"}},[t._v("#")]),t._v(" CSS 优化、提高性能的方法有哪些？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("加载性能：\n\n（1）css压缩：将写好的css进行打包压缩，可以减少很多的体积。\n（2）css单一样式：当需要下边距和左边距的时候，很多时候选择:margin:top 0 bottom 0;但margin-bottom:bot\ntom;margin-left:left;执行的效率更高。\n（3）减少使用@import,而建议使用link，因为后者在页面加载时一起加载，前者是等待页面加载完成之后再进行加载。\n\n选择器性能：\n\n（1）关键选择器（key selector）。选择器的最后面的部分为关键选择器（即用来匹配目标元素的部分）。CSS选择符是从右到\n左进行匹配的。当使用后代选择器的时候，浏览器会遍历所有子元素来确定是否是指定的元素等等；\n\n（2）如果规则拥有ID选择器作为其关键选择器，则不要为规则增加标签。过滤掉无关的规则（这样样式系统就不会浪费时间去匹\n配它们了）。\n\n（3）避免使用通配规则，如*{}计算次数惊人！只对需要用到的元素进行选择。\n\n（4）尽量少的去对标签进行选择，而是用class。\n\n（5）尽量少的去使用后代选择器，降低选择器的权重值。后代选择器的开销是最高的，尽量将选择器的深度降到最低，最高不要超过\n三层，更多的使用类来关联每一个标签元素。\n\n（6）了解哪些属性是可以通过继承而来的，然后避免对这些属性重复指定规则。\n\n渲染性能：\n\n（1）慎重使用高性能属性：浮动、定位。\n\n（2）尽量减少页面重排、重绘。\n\n（3）去除空规则：｛｝。空规则的产生原因一般来说是为了预留样式。去除这些空规则无疑能减少css文档体积。\n\n（4）属性值为0时，不加单位。\n\n（5）属性值为浮动小数0.**，可以省略小数点之前的0。\n\n（6）标准化各种浏览器前缀：带浏览器前缀的在前。标准属性在后。\n\n（7）不使用@import前缀，它会影响css的加载速度。\n\n（8）选择器优化嵌套，尽量避免层级过深。\n\n（9）css雪碧图，同一页面相近部分的小图标，方便使用，减少页面的请求次数，但是同时图片本身会变大，使用时，优劣考虑清\n楚，再使用。\n\n（10）正确使用display的属性，由于display的作用，某些样式组合会无效，徒增样式体积的同时也影响解析性能。\n\n（11）不滥用web字体。对于中文网站来说WebFonts可能很陌生，国外却很流行。web fonts通常体积庞大，而且一些浏\n览器在下载web fonts时会阻塞页面渲染损伤性能。\n\n可维护性、健壮性：\n\n（1）将具有相同属性的样式抽离出来，整合并通过class在页面中进行使用，提高css的可维护性。\n（2）样式与内容分离：将css代码定义到外部css中。\n")])])]),s("h3",{attrs:{id:"浏览器是怎样解析-css-选择器的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是怎样解析-css-选择器的"}},[t._v("#")]),t._v(" 浏览器是怎样解析 CSS 选择器的？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("样式系统从关键选择器开始匹配，然后左移查找规则选择器的祖先元素。只要选择器的子树一直在工作，样式系统就会持续左移，直\n到和规则匹配，或者是因为不匹配而放弃该规则。\n\n试想一下，如果采用从左至右的方式读取CSS规则，那么大多数规则读到最后（最右）才会发现是不匹配的，这样做会费时耗能，\n最后有很多都是无用的；而如果采取从右向左的方式，那么只要发现最右边选择器不匹配，就可以直接舍弃了，避免了许多无效匹配。\n")])])]),s("h3",{attrs:{id:"在网页中应该使用奇数还是偶数的字体-为什么呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在网页中应该使用奇数还是偶数的字体-为什么呢"}},[t._v("#")]),t._v(" 在网页中应该使用奇数还是偶数的字体？为什么呢？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("（1）偶数字号相对更容易和web设计的其他部分构成比例关系。比如：当我用了14px的正文字号，我可能会在一些地方用14\n×0.5=7px的margin，在另一些地方用14×1.5=21px的标题字号。\n（2）浏览器缘故，低版本的浏览器ie6会把奇数字体强制转化为偶数，即13px渲染为14px。\n（3）系统差别，早期的Windows里，中易宋体点阵只有12和14、15、16px，唯独缺少13px。\n")])])]),s("h3",{attrs:{id:"margin-和-padding-分别适合什么场景使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin-和-padding-分别适合什么场景使用"}},[t._v("#")]),t._v(" margin 和 padding 分别适合什么场景使用？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("margin是用来隔开元素与元素的间距；padding是用来隔开元素与内容的间隔。\nmargin用于布局分开元素使元素与元素互不相干。\npadding用于元素与内容之间的间隔，让内容（文字）与（包裹）元素之间有一段距离。\n\n何时应当使用margin：\n•需要在border外侧添加空白时。\n•空白处不需要背景（色）时。\n•上下相连的两个盒子之间的空白，需要相互抵消时。如15px+20px的margin，将得到20px的空白。\n\n何时应当时用padding：\n•需要在border内测添加空白时。\n•空白处需要背景（色）时。\n•上下相连的两个盒子之间的空白，希望等于两者之和时。如15px+20px的padding，将得到35px的空白。\n")])])]),s("h3",{attrs:{id:"抽离样式模块怎么写-说出思路-有无实践经验-阿里航旅的面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抽离样式模块怎么写-说出思路-有无实践经验-阿里航旅的面试题"}},[t._v("#")]),t._v(" 抽离样式模块怎么写，说出思路，有无实践经验？[阿里航旅的面试题]")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("我的理解是把常用的css样式单独做成css文件……通用的和业务相关的分离出来，通用的做成样式模块儿共享，业务相关的，放\n进业务相关的库里面做成对应功能的模块儿。\n")])])]),s("h3",{attrs:{id:"简单说一下-css3-的-all-属性。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单说一下-css3-的-all-属性。"}},[t._v("#")]),t._v(" 简单说一下 css3 的 all 属性。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("all属性实际上是所有CSS属性的缩写，表示，所有的CSS属性都怎样怎样，但是，不包括unicode-bidi和direction\n这两个CSS属性。支持三个CSS通用属性值，initial,inherit,unset。\n\ninitial是初始值的意思，也就是该元素元素都除了unicode-bidi和direction以外的CSS属性都使用属性的默认初始\n值。\n\ninherit是继承的意思，也就是该元素除了unicode-bidi和direction以外的CSS属性都继承父元素的属性值。\n\nunset是取消设置的意思，也就是当前元素浏览器或用户设置的CSS忽略，然后如果是具有继承特性的CSS，如color，则\n使用继承值；如果是没有继承特性的CSS属性，如background-color，则使用初始值。\n")])])]),s("h3",{attrs:{id:"为什么不建议使用统配符初始化-css-样式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么不建议使用统配符初始化-css-样式。"}},[t._v("#")]),t._v(" 为什么不建议使用统配符初始化 css 样式。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("采用*{padding:0;margin:0;}这样的写法好处是写起来很简单，但是是通配符，需要把所有的标签都遍历一遍，当网站较大时，\n样式比较多，这样写就大大的加强了网站运行的负载，会使网站加载的时候需要很长一段时间，因此一般大型的网站都有分层次的一\n套初始化样式。\n\n出于性能的考虑，并不是所有标签都会有padding和margin，因此对常见的具有默认padding和margin的元素初始化即\n可，并不需使用通配符*来初始化。\n")])])]),s("h3",{attrs:{id:"absolute-的-containingblock-包含块-计算方式跟正常流有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#absolute-的-containingblock-包含块-计算方式跟正常流有什么不同"}},[t._v("#")]),t._v(" absolute 的 containingblock（包含块）计算方式跟正常流有什么不同？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("（1）内联元素也可以作为“包含块”所在的元素；\n\n（2）“包含块”所在的元素不是父块级元素，而是最近的position不为static的祖先元素或根元素；\n\n（3）边界是padding box而不是content box。\n")])])]),s("h3",{attrs:{id:"对于-haslayout-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对于-haslayout-的理解"}},[t._v("#")]),t._v(" 对于 hasLayout 的理解？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("hasLayout是IE特有的一个属性。很多的IE下的css bug都与其息息相关。在IE中，一个元素要么自己对自身的内容进\n行计算大小和组织，要么依赖于父元素来计算尺寸和组织内容。当一个元素的hasLayout属性值为true时，它负责对自己和可\n能的子孙元素进行尺寸计算和定位。虽然这意味着这个元素需要花更多的代价来维护自身和里面的内容，而不是依赖于祖先元素来完\n成这些工作。\n")])])]),s("h3",{attrs:{id:"元素竖向的百分比设定是相对于容器的高度吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素竖向的百分比设定是相对于容器的高度吗"}},[t._v("#")]),t._v(" 元素竖向的百分比设定是相对于容器的高度吗？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果是height的话，是相对于包含块的高度。\n\n如果是padding或者margin竖直方向的属性则是相对于包含块的宽度。\n")])])]),s("h3",{attrs:{id:"全屏滚动的原理是什么-用到了-css-的哪些属性-待深入实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全屏滚动的原理是什么-用到了-css-的哪些属性-待深入实践"}},[t._v("#")]),t._v(" 全屏滚动的原理是什么？用到了 CSS 的哪些属性？（待深入实践）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("原理：有点类似于轮播，整体的元素一直排列下去，假设有5个需要展示的全屏页面，那么高度是500%，只是展示100%，容器及容\n器内的页面取当前可视区高度，同时容器的父级元素overflow属性值设为hidden，通过更改容器可视区的位置来实现全\n屏滚动效果。主要是响应鼠标事件，页面通过CSS的动画效果，进行移动。\n\noverflow：hidden；transition：all 1000 ms ease；\n")])])]),s("h3",{attrs:{id:"什么是响应式设计-响应式设计的基本原理是什么-如何兼容低版本的-ie-待深入了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是响应式设计-响应式设计的基本原理是什么-如何兼容低版本的-ie-待深入了解"}},[t._v("#")]),t._v(" 什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的 IE？（待深入了解）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("响应式网站设计是一个网站能够兼容多个终端，而不是为每一个终端做一个特定的版本。基本原理是通过媒体查询检测不同的设备屏\n幕尺寸做处理。页面头部必须有meta声明的viewport。\n")])])]),s("h3",{attrs:{id:"视差滚动效果-如何给每页做不同的动画-回到顶部-向下滑动要再次出现-和只出现一次分别怎么做"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视差滚动效果-如何给每页做不同的动画-回到顶部-向下滑动要再次出现-和只出现一次分别怎么做"}},[t._v("#")]),t._v(" 视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("视差滚动是指多层背景以不同的速度移动，形成立体的运动效果，带来非常出色的视觉体验。\n")])])]),s("h3",{attrs:{id:"如何修改-chrome-记住密码后自动填充表单的黄色背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何修改-chrome-记住密码后自动填充表单的黄色背景"}},[t._v("#")]),t._v(" 如何修改 chrome 记住密码后自动填充表单的黄色背景？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("chrome表单自动填充后，input文本框的背景会变成黄色的，通过审查元素可以看到这是由于chrome会默认给自动填充的in\nput表单加上input:-webkit-autofill私有属性，然后对其赋予以下样式：\n\n{\nbackground-color:rgb(250,255,189)!important;\nbackground-image:none!important;\ncolor:rgb(0,0,0)!important;\n}\n\n对chrome默认定义的background-color，background-image，color使用important是不能提高其优先级的，但是\n其他属性可使用。\n\n使用足够大的纯色内阴影来覆盖input输入框的黄色背景，处理如下\n\ninput:-webkit-autofill,textarea:-webkit-autofill,select:-webkit-autofill{\n-webkit-box-shadow:000px 1000px white inset;\nborder:1px solid #CCC !important;\n}\n")])])]),s("h3",{attrs:{id:"怎么让-chrome-支持小于-12px-的文字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么让-chrome-支持小于-12px-的文字"}},[t._v("#")]),t._v(" 怎么让 Chrome 支持小于 12px 的文字？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("在谷歌下css设置字体大小为12px及以下时，显示都是一样大小，都是默认12px。\n\n解决办法：\n\n（1）可以使用Webkit的内核的-webkit-text-size-adjust的私有CSS属性来解决，只要加了-webkit-text-size\n-adjust:none;字体大小就不受限制了。但是chrome更新到27版本之后就不可以用了。所以高版本chrome谷歌浏览器\n已经不再支持-webkit-text-size-adjust样式，所以要使用时候慎用。\n\n（2）还可以使用css3的transform缩放属性-webkit-transform:scale(0.5);注意-webkit-transform:scale(0.\n75);收缩的是整个元素的大小，这时候，如果是内联元素，必须要将内联元素转换成块元素，可以使用display：block/\ninline-block/...；\n\n（3）使用图片：如果是内容固定不变情况下，使用将小于12px文字内容切出做图片，这样不影响兼容也不影响美观。\n")])])]),s("h3",{attrs:{id:"让页面里的字体变清晰-变细用-css-怎么做"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#让页面里的字体变清晰-变细用-css-怎么做"}},[t._v("#")]),t._v(" 让页面里的字体变清晰，变细用 CSS 怎么做？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("webkit内核的私有属性：-webkit-font-smoothing，用于字体抗锯齿，使用后字体看起来会更清晰舒服。\n\n在MacOS测试环境下面设置-webkit-font-smoothing:antialiased;但是这个属性仅仅是面向MacOS，其他操作系统设\n置后无效。\n")])])]),s("h3",{attrs:{id:"font-style-属性中-italic-和-oblique-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#font-style-属性中-italic-和-oblique-的区别"}},[t._v("#")]),t._v(" font-style 属性中 italic 和 oblique 的区别？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("italic和oblique这两个关键字都表示“斜体”的意思。\n\n它们的区别在于，italic是使用当前字体的斜体字体，而oblique只是单纯地让文字倾斜。如果当前字体没有对应的斜体字体，\n则退而求其次，解析为oblique，也就是单纯形状倾斜。\n")])])]),s("h3",{attrs:{id:"设备像素、css-像素、设备独立像素、dpr、ppi-之间的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设备像素、css-像素、设备独立像素、dpr、ppi-之间的区别"}},[t._v("#")]),t._v(" 设备像素、css 像素、设备独立像素、dpr、ppi 之间的区别？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("设备像素指的是物理像素，一般手机的分辨率指的就是设备像素，一个设备的设备像素是不可变的。\n\ncss像素和设备独立像素是等价的，不管在何种分辨率的设备上，css像素的大小应该是一致的，css像素是一个相对单位，它是相\n对于设备像素的，一个css像素的大小取决于页面缩放程度和dpr的大小。\n\ndpr指的是设备像素和设备独立像素的比值，一般的pc屏幕，dpr=1。在iphone4时，苹果推出了retina屏幕，它的dpr\n为2。屏幕的缩放会改变dpr的值。\n\nppi指的是每英寸的物理像素的密度，ppi越大，屏幕的分辨率越大。\n")])])]),s("h3",{attrs:{id:"layout-viewport、visual-viewport-和-ideal-viewport-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#layout-viewport、visual-viewport-和-ideal-viewport-的区别"}},[t._v("#")]),t._v(" layout viewport、visual viewport 和 ideal viewport 的区别？")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("相关知识点")]),s("p",[t._v("如果把移动设备上浏览器的可视区域设为viewport的话，某些网站就会因为viewport太窄而显示错乱，所以这些浏览器就决定\n默认情况下把viewport设为一个较宽的值，比如980px，这样的话即使是那些为桌面设计的网站也能在移动浏览器上正常显示了。\nppk把这个浏览器默认的viewport叫做layout viewport。")]),t._v(" "),s("p",[t._v("layout viewport的宽度是大于浏览器可视区域的宽度的，所以我们还需要一个viewport来代表浏览器可视区域的大小，ppk把\n这个viewport叫做visual viewport。")]),t._v(" "),s("p",[t._v("ideal viewport是最适合移动设备的viewport，ideal viewport的宽度等于移动设备的屏幕宽度，只要在css中把某一元\n素的宽度设为ideal viewport的宽度（单位用px），那么这个元素的宽度就是设备屏幕的宽度了，也就是宽度为100%的效果。i\ndeal viewport的意义在于，无论在何种分辨率的屏幕下，那些针对ideal viewport而设计的网站，不需要用户手动缩放，也\n不需要出现横向滚动条，都可以完美的呈现给用户。")])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("移动端一共需要理解三个viewport的概念的理解。\n\n第一个视口是布局视口，在移动端显示网页时，由于移动端的屏幕尺寸比较小，如果网页使用移动端的屏幕尺寸进行布局的话，那么整\n个页面的布局都会显示错乱。所以移动端浏览器提供了一个layout viewport布局视口的概念，使用这个视口来对页面进行布局展\n示，一般layout viewport的大小为980px，因此页面布局不会有太大的变化，我们可以通过拖动和缩放来查看到这个页面。\n\n第二个视口指的是视觉视口，visual viewport指的是移动设备上我们可见的区域的视口大小，一般为屏幕的分辨率的大小。visu\nal viewport和layout viewport的关系，就像是我们通过窗户看外面的风景，视觉视口就是窗户，而外面的风景就是布局视口\n中的网页内容。\n\n第三个视口是理想视口，由于layout viewport一般比visual viewport要大，所以想要看到整个页面必须通过拖动和缩放才\n能实现。所以又提出了ideal viewport的概念，ideal viewport下用户不用缩放和滚动条就能够查看到整个页面，并且页面在\n不同分辨率下显示的内容大小相同。ideal viewport其实就是通过修改layout viewport的大小，让它等于设备的宽度，这个\n宽度可以理解为是设备独立像素，因此根据ideal viewport设计的页面，在不同分辨率的屏幕下，显示应该相同。\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);